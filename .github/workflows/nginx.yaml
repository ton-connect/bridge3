name: nginx tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  nginx:
    name: nginx tests
    runs-on: ubuntu-latest
    if: false  # Temporarily disable nginx tests
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '24'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install Go dependencies
      run: go mod download

    - name: Build project
      run: make build

    - name: Start bridge environment
      run: make run-nginx

    - name: Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 30
        
        # Wait for nginx load balancer
        timeout 60 bash -c 'until curl -f http://localhost:8080/health; do sleep 2; done'
        
        echo "Services are ready!"

    - name: Check service status
      run: make status-postgres

    - name: Run bridge-sdk tests
      env:
        BRIDGE_URL: http://localhost:8080/bridge
      run: make test-bridge-sdk

    - name: Show logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Logs ==="
        make logs-postgres
        echo "=== Docker Container Status ==="
        docker ps -a

    - name: Cleanup
      if: always()
      run: |
        make stop-postgres
        docker system prune -f
